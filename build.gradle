import java.util.stream.Collectors

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'de.swmt'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.fusionauth:fusionauth-jwt:5.3.1'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
    implementation 'org.modelmapper:modelmapper:3.1.1'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.51'
    swaggerUI 'org.webjars:swagger-ui:5.1.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'
}

swaggerSources {
    fuhrparkmanagement {
        inputFile = file("${rootDir}/swagger/swagger-fuhrparkmanagement.yaml")
        code {
            language = 'spring'
            configFile = file("${rootDir}/swagger/swagger-codegen-config.json")
            rawOptions = [ '--model-name-suffix=Dto' ]

            // https://github.com/int128/gradle-swagger-generator-plugin/issues/221
            jvmArgs = ['--add-opens=java.base/java.util=ALL-UNNAMED']
        }
        ui {
            outputDir = file("${buildDir}/swagger-ui-fuhrparkmanagement/static/swagger-ui")
        }
    }
}

task fixGeneratedSwaggerCode(dependsOn: swaggerSources.fuhrparkmanagement.code) {
    group 'build'
    description 'Fixes the generated swagger code'

    def swaggerJavaFiles = file("${swaggerSources.fuhrparkmanagement.code.outputDir}/src/main/java")
    inputs.dir(swaggerJavaFiles)
    outputs.dir(swaggerJavaFiles)

    doLast {
        swaggerJavaFiles.traverse {
            if (it.isDirectory())
                return
            // We need to manually change the imports from javax to jakarta.
            // The option 'useSpringBoot3' for the swagger code generator should do this automatically, but it does not.
            // See: https://github.com/OpenAPITools/openapi-generator/issues/14143
            def modifiedLines = it.readLines().stream()
                    .map { it.replaceAll('javax', 'jakarta') }
                    .collect(Collectors.joining('\n'))
            it.write(modifiedLines)
        }
    }
}

compileJava.dependsOn fixGeneratedSwaggerCode
processResources.dependsOn generateSwaggerUI

sourceSets.main.java.srcDir "${swaggerSources.fuhrparkmanagement.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir swaggerSources.fuhrparkmanagement.ui.outputDir.parentFile.parentFile

tasks.named('test') {
    useJUnitPlatform()
}
